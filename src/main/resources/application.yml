# 공통

spring:
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    open-in-view: false

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 60MB

springdoc:
  packages-to-scan: com.example
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    tags-sorter: method
    operations-sorter: alpha
  api-docs:
    path: /api-docs/json
    groups:
      enabled: true
  cache:
    disabled: true

cloud:
  aws:
    credentials:
      access-key: ${cloud.aws.credentials.access-key}
      secret-key: ${cloud.aws.credentials.secret-key}
    s3:
      bucket: ${cloud.aws.s3.bucket}
    region:
      static: ap-northeast-2
    stack:
      auto: false

cloudfront-domain-name: ${cloudfront-domain-name}

FIREBASE_KEY: ${FIREBASE_KEY}

---

spring:
  profiles:
    active: prod

  datasource:
    url: ${spring.datasource.url}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}
    driver-class-name: ${spring.datasource.driver-class-name}
    hikari:
      maximum-pool-size: 30

logging:
  slack:
    webhook-uri: ${logging.slack.webhook-uri}
  config: ${logging.config}
  level:
    org.hibernate.sql: debug
    org.hibernate.type: trace

myapp:
  api-url: ${myapp.api-url}

---

spring:
  profiles:
    active: dev

  datasource:
    url: ${spring.datasource.url}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}
    driver-class-name: ${spring.datasource.driver-class-name}
    hikari:
      maximum-pool-size: 30

logging:
  slack:
    webhook-uri: ${logging.slack.webhook-uri}
  config: ${logging.config}
  level:
    org.hibernate.sql: debug
    org.hibernate.type: trace

myapp:
  api-url: ${myapp.api-url}